Ezsynth
Use PreProcessor to load styles and sequences and get indexes
Use GuideFactory to create all guides
Create SequenceManager for Sequences, then use to create my sequence chunks and forward/backward
Use Stylizer to run the process 

Ezsynth->PreProcessor->GuideFactory(Which used OpticalFlow and Edge_detection)->SequenceManager, 
which takes guides and inputs to create chunks -> stylizer to run the chunks. 

class Ezsynth():
    def __init__(self, style_keys, imgseq, flow_method = 'Raft',
                 model = 'Sintel', edge_method = 'PAGE'):
        
        self.PreProcessor = PreProcessor(style_keys, imgseq)
        self.Guides = GuideFactory(flow_method, model, edge_method)
        self.SequenceManager = SequenceManager(self.PreProcessor, self.GuideFactory)
        self.Stylizer = Stylizer()
        self.PreProcessor.load_styles()
        self.PreProcessor.load_sequences()
        self.SequenceManager.create_chunks()
        self.stylized_imgs = []
        
    def stylize(self):
        self.Stylizer.run()
        return self.Stylizer.stylized_imgs
    
    def custom_guide(self, guide_list):
        self.GuideFactory.custom_guide(guide_list)
        
    def inpaint(self):
        self.Stylizer.inpaint()
